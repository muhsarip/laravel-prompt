name: Laravel Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php: [8.2, 8.3]
        laravel: [11.*, 12.*]
        dependency-version: [prefer-lowest, prefer-stable]

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.dependency-version }}

    steps:
    - uses: actions/checkout@v4

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.composer/cache/files
        key: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
        coverage: none

    - name: Setup problem matchers
      run: |
        echo "::add-matcher::${{ runner.tool_cache }}/php.json"
        echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

    - name: Install dependencies
      run: |
        composer require "laravel/framework:${{ matrix.laravel }}" --no-interaction --no-update
        composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction

    - name: Set up environment
      run: |
        cp .env.example .env
        php artisan key:generate
        touch database/database.sqlite

    - name: Run Laravel Pint
      run: vendor/bin/pint --test

    - name: Execute tests
      run: vendor/bin/phpunit --testdox

  security:
    runs-on: ubuntu-latest
    name: Security Check

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: dom, curl, libxml, mbstring, zip

    - name: Install dependencies
      run: composer install --prefer-dist --no-interaction

    - name: Security check
      run: |
        composer require --dev enlightn/security-checker
        vendor/bin/security-checker security:check composer.lock
